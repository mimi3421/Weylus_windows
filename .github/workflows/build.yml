name: Build_windows_only

on:
  push:
    branches: [ '*' ]
    tags:
      - v*
  pull_request:
    branches: [ master ]

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        include:
        
        - os: windows-latest
          install-deps: |
             # This is not bash but a placeholder from WSL that tells you to install some WSL crap
             # and by doing so it shadows the actual bash executable when calling CreateProcess from
             # winapi, which rust's std::Command does ...
             rm 'C:\Windows\System32\bash.exe'
             # make sure to only use msvc's link.exe
             rm 'C:\Program Files\Git\usr\bin\link.exe'
             curl -LO https://www.nasm.us/pub/nasm/releasebuilds/2.15.05/win64/nasm-2.15.05-win64.zip
             7z x nasm-2.15.05-win64.zip
             cp nasm-2.15.05/nasm.exe /usr/bin/nasm.exe
             npm install typescript
             # default pkg-config is broken, fortunately this one comes first in PATH
             choco install pkgconfiglite
          build-cmd: cargo build --release --verbose
          package-files: target/release/Windows.zip
          exec-file: target/release/Windows.zip
          pkg-cmd: cd target/release/ && 7z a Windows.zip weylus.exe

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: deps/dist
        key: ${{ runner.os }}-deps-${{ hashFiles('deps/*') }}-6
    - uses: actions/cache@v2
      if: ${{ !contains(matrix.os, 'macOS') }}
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}-6
    - name: Download deps
      run: ${{ matrix.install-deps }}
      shell: bash
    - uses: ilammy/msvc-dev-cmd@v1
    - name: Build
      run: ${{ matrix.build-cmd }}
      shell: bash
    - name: Package
      run: ${{ matrix.pkg-cmd }}
    - name: Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}
        path: |
          ${{ matrix.exec-file }}
    - name: ArtifactsDeps
      uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}-deps
        path: |
          deps/dist
          www/static/lib.js
    - name: ArtifactsDebug
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}-ffbuild
        path: |
          deps/ffmpeg/ffbuild
    - name: Debug via SSH
      if: failure()
      uses: luchihoratiu/debug-via-ssh@main
      with:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        SSH_PASS: ${{ secrets.SSH_PASS }}
        NGROK_REGION: eu
    - name: Publish
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
          files: |
            ${{ matrix.package-files }}
          prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
